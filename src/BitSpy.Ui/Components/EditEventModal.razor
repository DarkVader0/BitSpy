@using BitSpy.Ui.Response
@using System.Net.Http.Headers
@inject HttpClient HttpClient


<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit event</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                <input type="text" @bind="@Event.Name"/>
            </div>
            <div class="modal-footer">
                @switch (DialogType)
                {
                    case ModalDialogType.Ok:
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>OK</button>
                        break;
                    case ModalDialogType.Cancel:
                        <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                        break;
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventResponse Event { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private async Task UpdateEvent()
    {
        await HttpClient.PutAsJsonAsync($"{ApiConstants.ApiUrl}/events/{Event.Name}", Event);
    }

    [Parameter]
    public ModalDialogType DialogType { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync();
    }

    private Task ModalOk()
    {
        UpdateEvent().GetAwaiter().GetResult();
        return OnClose.InvokeAsync();
    }

    public enum ModalDialogType
    {
        Ok,
        Cancel
    }

}